笔记
1.第一个linux下C程序
cd
mkdir sjm
cd sjm
mkdir helloworld
cd hellolworld
touch hello.c
	#include <stdio.h>
	#include <stdlib.h>
	int main(void) {
		printf("helloworld\n");
		return 0;
	}
make hello
./hello

2.文件操作
unix（linux）下一切皆文件
	a.打开文件  open
	b.文件读写  read write
	c.关闭文件  close
	
	例子：参考fileTest.c
cd 
cd sjm
mkdir fileTest
cd file
touch fileTest.c
	#include <stdio.h>
	#include <stdlib.h>
	//strlen
	#include <string.h>
	//文件
	#include <sys/types.h>
	#include <sys/fcntl.h>
	
	int main(void)
	{
		int fd;
		//以可读可写的方式打开文件
		//返回文件描述符（文件编号）
		//O_CREAT 如果文件不存在则创建
		//0666代表任何用户都可以对这个文件读写操作
		fd = open("student.txt", O_RDWR |O_CREAT, 0666);
		if (fd < 0) {
			//出了打印open之外还会打印出错信息
			perror("open");
		}
	
		//字符串:字符字符字符0
		char *content = "hello linux i am here";
		//strlen计算字符串长度的时候不算0
		write(fd, content, strlen(content) + 1);
	
		/*		     |
		hello linux i am here---------
		*/
	
		//设置文件偏移（关标）
		lseek(fd, 0, SEEK_SET);
	
		char buf[256];
		//从文件指针（光标）处开始读
		//从fd文件读取256个字节到buf中
		read(fd, buf, 256);
	
		printf("文件内容是:%s\n", buf);
	
		close(fd);
		
		return 0;
	}
3.学生管理系统

4.网络
	发送    接收
	
user:	app   "helloworld"
---------socket(port netcard)---socket----
kernel:  tcp/ip
	 eth_driver
----------------------
	 192.168.1.3 192.168.1.5
hardware: netcard1 netcard2

数据链路层 eth [目的mac 源mac地址 协议类型]
网络层 ip [目的ip 源ip] 
传输层 udp/tcp [目的端口号 源端口号]
应用层 helloworld

以太桢 [eth][ip][tcp/udp][helloworld]

pc1:qq-->socket(port)   192.168.1.2 
    wx-->socket(port)
pc2:qq-->socket(1234)	 192.168.1.3 
    wx-->socket(2345)
pc3:qq-->socket(port)   192.168.1.4
    wx-->socket(port)

socket分类：
1.流式socket  tcp
特点：面向连接的 顺序 安全

2.报式socket  udp
特点：无连接 无顺序 不安全

socket编程方法：
流式：
服务器：
	1.创建socket	
	2.绑定端口号
	3.把socket设置为监听状态
	4.等待客户端的连接
	5.数据通信
	6.关闭socket
客户端：
	1.创建socket
	2.去和服务器建立连接
	3.数据通信
	4.关闭socket
客户端和服务器建立连接的过程：
三次握手：
	客户端--1->服务器
	服务器--2--1-->客户端
	客户端--2-->服务器
断开连接：
四次回首：
	客户端--->服务器
	服务器--->客户端

	服务器--->客户端
	客户端--->服务器

报式：
服务器：
	1.创建socket
	2.绑定端口号
	3.数据通信
客户端：
	1.创建socket
	#2.绑定端口号
	3.数据通信
5.sqlite
	download: http://www.sqlite.org/download.html
	install:
	tar -xvf sqlite-autoconf-3120100.tar.gz
	cd sqlite-autoconf-3120100
	./configure
	make
	make install	
	
	use:
[root@localhost code]# cd ..
[root@localhost ~]# cd sjm/
[root@localhost sjm]# mkdir sqlite
[root@localhost sjm]# cd sqlite/
[root@localhost sqlite]# sqlite3 my.sqlite
SQLite version 3.12.1 2016-04-08 15:09:49
Enter ".help" for usage hints.
sqlite> .quit
[root@localhost sqlite]# ls
my.sqlite
[root@localhost sqlite]# sqlite3 my.sqlite
SQLite version 3.12.1 2016-04-08 15:09:49
Enter ".help" for usage hints.
sqlite> .help
.backup ?DB? FILE      Backup DB (default "main") to FILE
.bail on|off           Stop after hitting an error.  Default OFF
.binary on|off         Turn binary output on or off.  Default OFF
.changes on|off        Show number of rows changed by SQL
.clone NEWDB           Clone data into NEWDB from the existing database
.databases             List names and files of attached databases
.dbinfo ?DB?           Show status information about the database
.dump ?TABLE? ...      Dump the database in an SQL text format
                         If TABLE specified, only dump tables matching
                         LIKE pattern TABLE.
.echo on|off           Turn command echo on or off
.eqp on|off            Enable or disable automatic EXPLAIN QUERY PLAN
.exit                  Exit this program
.explain ?on|off|auto? Turn EXPLAIN output mode on or off or to automatic
.fullschema            Show schema and the content of sqlite_stat tables
.headers on|off        Turn display of headers on or off
.help                  Show this message
.import FILE TABLE     Import data from FILE into TABLE
.indexes ?TABLE?       Show names of all indexes
                         If TABLE specified, only show indexes for tables
                         matching LIKE pattern TABLE.
.limit ?LIMIT? ?VAL?   Display or change the value of an SQLITE_LIMIT
.load FILE ?ENTRY?     Load an extension library
.log FILE|off          Turn logging on or off.  FILE can be stderr/stdout
.mode MODE ?TABLE?     Set output mode where MODE is one of:
                         ascii    Columns/rows delimited by 0x1F and 0x1E
                         csv      Comma-separated values
                         column   Left-aligned columns.  (See .width)
                         html     HTML <table> code
                         insert   SQL insert statements for TABLE
                         line     One value per line
                         list     Values delimited by .separator strings
                         tabs     Tab-separated values
                         tcl      TCL list elements
.nullvalue STRING      Use STRING in place of NULL values
.once FILENAME         Output for the next SQL command only to FILENAME
.open ?FILENAME?       Close existing database and reopen FILENAME
.output ?FILENAME?     Send output to FILENAME or stdout
.print STRING...       Print literal STRING
.prompt MAIN CONTINUE  Replace the standard prompts
.quit                  Exit this program
.read FILENAME         Execute SQL in FILENAME
.restore ?DB? FILE     Restore content of DB (default "main") from FILE
.save FILE             Write in-memory database into FILE
.scanstats on|off      Turn sqlite3_stmt_scanstatus() metrics on or off
.schema ?TABLE?        Show the CREATE statements
                         If TABLE specified, only show tables matching
                         LIKE pattern TABLE.
.separator COL ?ROW?   Change the column separator and optionally the row
                         separator for both the output mode and .import
.shell CMD ARGS...     Run CMD ARGS... in a system shell
.show                  Show the current values for various settings
.stats ?on|off?        Show stats or turn stats on or off
.system CMD ARGS...    Run CMD ARGS... in a system shell
.tables ?TABLE?        List names of tables
                         If TABLE specified, only list tables matching
                         LIKE pattern TABLE.
.timeout MS            Try opening locked tables for MS milliseconds
.timer on|off          Turn SQL timer on or off
.trace FILE|off        Output each SQL statement as it is run
.vfsinfo ?AUX?         Information about the top-level VFS
.vfslist               List all available VFSes
.vfsname ?AUX?         Print the name of the VFS stack
.width NUM1 NUM2 ...   Set column widths for "column" mode
                         Negative values right-justify
sqlite> .database
seq  name             file                                                      
---  ---------------
----------------------------------------------------------
0    main             /root/sjm/sqlite/my.sqlite                                
sqlite> .table
sqlite> create table if not exists usertable(id integer not null primary key
autoincrement, name text not null, passwd text not null);
sqlite> .table
usertable
sqlite> insert into usertable(name,passwd) values('zhangsan', '1234567890');
sqlite> insert into usertable(name,passwd) values('lisi', '123');
sqlite> insert into usertable(name,passwd) values('12345','34567');
sqlite> select * from usertable;
1|zhangsan|1234567890
2|lisi|123
3|12345|34567
sqlite> select * from usertable where id=1;
1|zhangsan|1234567890
sqlite> select * from usertable where id>1;
2|lisi|123
3|12345|34567
sqlite> select * from usertable where name='zhangsan';
1|zhangsan|1234567890
sqlite> delete from usertable where name='zhangsan';
sqlite> select * from usertable;
2|lisi|123
3|12345|34567
sqlite> update usertable set name='zhangsan' where id=2;
sqlite> select * from usertable;
2|zhangsan|123
3|12345|34567
sqlite> 

6.process
7.pthread
8.sqlite编程
	








